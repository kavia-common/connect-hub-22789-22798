{"is_source_file": true, "format": "C# interface", "description": "This file defines the interface IFriendRequestRepository responsible for CRUD operations and querying friend request data in the backend repository layer.", "external_files": ["FrndAppBackend.Models"], "external_methods": [], "published": ["IFriendRequestRepository"], "classes": [{"name": "IFriendRequestRepository", "description": "Interface for managing friend request entities, including retrieval, creation, updates, existence checks, and querying pending or all requests for a user."}], "methods": [{"name": "GetByIdAsync", "description": "Retrieves a FriendRequest by its unique identifier asynchronously."}, {"name": "AddAsync", "description": "Adds a new FriendRequest asynchronously."}, {"name": "UpdateAsync", "description": "Updates an existing FriendRequest asynchronously."}, {"name": "ExistsPendingAsync", "description": "Checks if there is a pending friend request from one user to another asynchronously."}, {"name": "GetPendingForUserAsync", "description": "Retrieves a list of pending FriendRequests for a specific user asynchronously."}, {"name": "GetAllForUserAsync", "description": "Retrieves all FriendRequests for a specific user asynchronously."}, {"name": "SaveChangesAsync", "description": "Persists any pending changes to the data store asynchronously."}], "calls": [], "search-terms": ["IFriendRequestRepository", "FriendRequest", "FriendRequestRepository", "Repository", "FriendRequest methods", "FriendRequest CRUD"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "hash": "c203adaa820a1ac5ce2f1cff0adf9f30", "format-version": 4, "code-base-name": "frnd_app_backend", "filename": "frnd_app_backend/Repositories/IFriendRequestRepository.cs", "revision_history": [{"25": ""}]}